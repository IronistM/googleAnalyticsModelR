% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ga_time_series_forecasting.R
\name{ga_prophet_forecast}
\alias{ga_prophet_forecast}
\title{Forecast time series data using Facebook's Prophet API}
\usage{
ga_prophet_forecast(df, time_col, value_col = NULL, periods = 10,
  time_unit = "day", include_history = TRUE, test_mode = FALSE,
  fun.aggregate = sum, na_fill_type = NULL, na_fill_value = 0,
  cap = NULL, floor = NULL, growth = NULL,
  weekly.seasonality = TRUE, yearly.seasonality = TRUE,
  holiday_col = NULL, holidays = NULL, regressors = NULL,
  funs.aggregate.regressors = NULL, ...)
}
\arguments{
\item{df}{- Data frame}

\item{time_col}{- Column that has time data}

\item{value_col}{- Column that has value data}

\item{periods}{- Number of time periods (e.g. days. unit is determined by time_unit) to forecast.}

\item{time_unit}{- "second"/"sec", "minute"/"min", "hour", "day", "week", "month", "quarter", or "year".}

\item{include_history}{- Whether to include history data in forecast or not.}

\item{fun.aggregate}{- Function to aggregate values.}

\item{na_fill_type}{- Type of NA fill:
NULL - Skip NA fill. Default behavior.
"previous" - Fill with previous non-NA value.
"value" - Fill with the value of na_fill_value.
"interpolate" - Linear interpolation.
"spline" - Spline interpolation.}

\item{na_fill_value}{- Value to fill NA when na_fill_type is "value"}

\item{cap}{- Achievable Maximum Capacity of the value to forecast.
https://facebookincubator.github.io/prophet/docs/forecasting_growth.html
It can be numeric or data frame. When numeric, the value is used as cap for both modeling and forecasting.
When it is a data frame, it should be a future data frame with cap column for forecasting.
When this is specified, the original data frame (df) should also have cap column for modeling.
When either a numeric or a data frame is specified, growth argument for prophet becomes "logistic",
as opposed to default "linear".}

\item{growth}{- This parameter used to specify type of Trend, which can be "linear" or "logistic",
but now we determine this automatically by cap. It is here just to avoid throwing error from prophet,
(about doubly specifying grouth param by our code and by "...") when old caller calls with this parameter.}

\item{weekly.seasonality}{- Whether to return weekly seasonality data.}

\item{yearly.seasonality}{- Whether to return yearly seasonality data.}

\item{holidays}{- Holiday definition data frame.}

\item{...}{- extra values to be passed to prophet::prophet. listed below.}

\item{seasonality.prior.scale}{- Strength of seasonality. Default is 10.}

\item{n.changepoints}{- Number of potential changepoints. Default is 25.}

\item{changepoint.prior.scale}{- Flexibility of automatic changepoint selection. Default is 0.05.}

\item{changepoints}{- list of potential changepoints.}

\item{holidays.prior.scale}{- Strength of holiday effect. Default is 10.}

\item{mcmc.samples}{- MCMC samples for full bayesian inference. Default is 0.}

\item{interval.width}{- Width of uncertainty intervals.}

\item{uncertainty.samples}{- Number of simulations made for calculating uncertainty intervals. Default is 1000.}
}
\description{
Forecast time series data using Facebook's Prophet API
}
